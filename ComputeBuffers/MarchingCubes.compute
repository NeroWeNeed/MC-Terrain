#pragma kernel MarchingCubes
#pragma enable_d3d11_debug_symbols
#include "MCHeader.hlsl"
static const int3 triangleWindingOrder = { 0,2,1 };

static const min16uint vertexData[1536] = {
    0x6201,
    0x5102,
    0x3304,
    0x6201,
    0x2315,
    0x4113,
    0x5102,
    0x3304,
    0x2315,
    0x4113,
    0x5102,
    0x4223,
    0x1326,
    0x3304,
    0x6201,
    0x4223,
    0x1326,
    0x6201,
    0x2315,
    0x4113,
    0x5102,
    0x4223,
    0x1326,
    0x4223,
    0x1326,
    0x3304,
    0x2315,
    0x4113,
    0x4113,
    0x8337,
    0x4223,
    0x6201,
    0x5102,
    0x3304,
    0x4223,
    0x4113,
    0x8337,
    0x6201,
    0x2315,
    0x8337,
    0x4223,
    0x5102,
    0x3304,
    0x2315,
    0x8337,
    0x4223,
    0x5102,
    0x4113,
    0x8337,
    0x1326,
    0x4113,
    0x8337,
    0x1326,
    0x3304,
    0x6201,
    0x6201,
    0x2315,
    0x8337,
    0x1326,
    0x5102,
    0x3304,
    0x2315,
    0x8337,
    0x1326,
    0x3304,
    0x1146,
    0x2245,
    0x6201,
    0x5102,
    0x1146,
    0x2245,
    0x6201,
    0x2315,
    0x4113,
    0x3304,
    0x1146,
    0x2245,
    0x2315,
    0x4113,
    0x5102,
    0x1146,
    0x2245,
    0x5102,
    0x4223,
    0x1326,
    0x3304,
    0x1146,
    0x2245,
    0x1146,
    0x2245,
    0x6201,
    0x4223,
    0x1326,
    0x3304,
    0x1146,
    0x2245,
    0x6201,
    0x2315,
    0x4113,
    0x5102,
    0x4223,
    0x1326,
    0x4223,
    0x1326,
    0x1146,
    0x2245,
    0x2315,
    0x4113,
    0x4223,
    0x4113,
    0x8337,
    0x3304,
    0x1146,
    0x2245,
    0x6201,
    0x5102,
    0x1146,
    0x2245,
    0x4223,
    0x4113,
    0x8337,
    0x4223,
    0x6201,
    0x2315,
    0x8337,
    0x3304,
    0x1146,
    0x2245,
    0x4223,
    0x8337,
    0x2315,
    0x2245,
    0x1146,
    0x5102,
    0x5102,
    0x4113,
    0x8337,
    0x1326,
    0x3304,
    0x1146,
    0x2245,
    0x4113,
    0x8337,
    0x1326,
    0x1146,
    0x2245,
    0x6201,
    0x6201,
    0x2315,
    0x8337,
    0x1326,
    0x5102,
    0x3304,
    0x1146,
    0x2245,
    0x2245,
    0x2315,
    0x8337,
    0x1326,
    0x1146,
    0x2315,
    0x2245,
    0x8157,
    0x6201,
    0x5102,
    0x3304,
    0x2315,
    0x2245,
    0x8157,
    0x4113,
    0x6201,
    0x2245,
    0x8157,
    0x2245,
    0x8157,
    0x4113,
    0x5102,
    0x3304,
    0x5102,
    0x4223,
    0x1326,
    0x2315,
    0x2245,
    0x8157,
    0x6201,
    0x4223,
    0x1326,
    0x3304,
    0x2315,
    0x2245,
    0x8157,
    0x6201,
    0x2245,
    0x8157,
    0x4113,
    0x5102,
    0x4223,
    0x1326,
    0x4223,
    0x1326,
    0x3304,
    0x2245,
    0x8157,
    0x4113,
    0x4223,
    0x4113,
    0x8337,
    0x2315,
    0x2245,
    0x8157,
    0x6201,
    0x5102,
    0x3304,
    0x4223,
    0x4113,
    0x8337,
    0x2315,
    0x2245,
    0x8157,
    0x8337,
    0x4223,
    0x6201,
    0x2245,
    0x8157,
    0x5102,
    0x3304,
    0x2245,
    0x8157,
    0x8337,
    0x4223,
    0x5102,
    0x4113,
    0x8337,
    0x1326,
    0x2315,
    0x2245,
    0x8157,
    0x4113,
    0x8337,
    0x1326,
    0x3304,
    0x6201,
    0x2315,
    0x2245,
    0x8157,
    0x5102,
    0x1326,
    0x8337,
    0x8157,
    0x2245,
    0x6201,
    0x8157,
    0x8337,
    0x1326,
    0x3304,
    0x2245,
    0x2315,
    0x3304,
    0x1146,
    0x8157,
    0x6201,
    0x5102,
    0x1146,
    0x8157,
    0x2315,
    0x3304,
    0x1146,
    0x8157,
    0x4113,
    0x6201,
    0x4113,
    0x5102,
    0x1146,
    0x8157,
    0x2315,
    0x3304,
    0x1146,
    0x8157,
    0x5102,
    0x4223,
    0x1326,
    0x1326,
    0x4223,
    0x6201,
    0x2315,
    0x8157,
    0x1146,
    0x3304,
    0x1146,
    0x8157,
    0x4113,
    0x6201,
    0x5102,
    0x4223,
    0x1326,
    0x1326,
    0x1146,
    0x8157,
    0x4113,
    0x4223,
    0x2315,
    0x3304,
    0x1146,
    0x8157,
    0x4223,
    0x4113,
    0x8337,
    0x6201,
    0x5102,
    0x1146,
    0x8157,
    0x2315,
    0x4223,
    0x4113,
    0x8337,
    0x3304,
    0x1146,
    0x8157,
    0x8337,
    0x4223,
    0x6201,
    0x4223,
    0x5102,
    0x1146,
    0x8157,
    0x8337,
    0x2315,
    0x3304,
    0x1146,
    0x8157,
    0x5102,
    0x4113,
    0x8337,
    0x1326,
    0x6201,
    0x4113,
    0x8337,
    0x1326,
    0x1146,
    0x8157,
    0x2315,
    0x6201,
    0x3304,
    0x1146,
    0x8157,
    0x8337,
    0x1326,
    0x5102,
    0x1326,
    0x1146,
    0x8157,
    0x8337,
    0x1326,
    0x8267,
    0x1146,
    0x6201,
    0x5102,
    0x3304,
    0x1326,
    0x8267,
    0x1146,
    0x6201,
    0x2315,
    0x4113,
    0x1326,
    0x8267,
    0x1146,
    0x5102,
    0x3304,
    0x2315,
    0x4113,
    0x1326,
    0x8267,
    0x1146,
    0x5102,
    0x4223,
    0x8267,
    0x1146,
    0x3304,
    0x6201,
    0x4223,
    0x8267,
    0x1146,
    0x5102,
    0x4223,
    0x8267,
    0x1146,
    0x6201,
    0x2315,
    0x4113,
    0x1146,
    0x8267,
    0x4223,
    0x4113,
    0x2315,
    0x3304,
    0x4113,
    0x8337,
    0x4223,
    0x1326,
    0x8267,
    0x1146,
    0x6201,
    0x5102,
    0x3304,
    0x4223,
    0x4113,
    0x8337,
    0x1326,
    0x8267,
    0x1146,
    0x6201,
    0x2315,
    0x8337,
    0x4223,
    0x1326,
    0x8267,
    0x1146,
    0x5102,
    0x3304,
    0x2315,
    0x8337,
    0x4223,
    0x1326,
    0x8267,
    0x1146,
    0x8267,
    0x1146,
    0x5102,
    0x4113,
    0x8337,
    0x6201,
    0x4113,
    0x8337,
    0x8267,
    0x1146,
    0x3304,
    0x6201,
    0x2315,
    0x8337,
    0x8267,
    0x1146,
    0x5102,
    0x1146,
    0x3304,
    0x2315,
    0x8337,
    0x8267,
    0x3304,
    0x1326,
    0x8267,
    0x2245,
    0x1326,
    0x8267,
    0x2245,
    0x6201,
    0x5102,
    0x3304,
    0x1326,
    0x8267,
    0x2245,
    0x6201,
    0x2315,
    0x4113,
    0x1326,
    0x8267,
    0x2245,
    0x2315,
    0x4113,
    0x5102,
    0x5102,
    0x4223,
    0x8267,
    0x2245,
    0x3304,
    0x6201,
    0x4223,
    0x8267,
    0x2245,
    0x5102,
    0x4223,
    0x8267,
    0x2245,
    0x3304,
    0x6201,
    0x2315,
    0x4113,
    0x4113,
    0x4223,
    0x8267,
    0x2245,
    0x2315,
    0x3304,
    0x1326,
    0x8267,
    0x2245,
    0x4223,
    0x4113,
    0x8337,
    0x1326,
    0x8267,
    0x2245,
    0x6201,
    0x5102,
    0x4223,
    0x4113,
    0x8337,
    0x3304,
    0x1326,
    0x8267,
    0x2245,
    0x4223,
    0x6201,
    0x2315,
    0x8337,
    0x5102,
    0x1326,
    0x8267,
    0x2245,
    0x2315,
    0x8337,
    0x4223,
    0x3304,
    0x2245,
    0x8267,
    0x8337,
    0x4113,
    0x5102,
    0x8337,
    0x8267,
    0x2245,
    0x6201,
    0x4113,
    0x5102,
    0x6201,
    0x2315,
    0x8337,
    0x8267,
    0x2245,
    0x3304,
    0x2315,
    0x8337,
    0x8267,
    0x2245,
    0x2315,
    0x2245,
    0x8157,
    0x1326,
    0x8267,
    0x1146,
    0x6201,
    0x5102,
    0x3304,
    0x2315,
    0x2245,
    0x8157,
    0x1326,
    0x8267,
    0x1146,
    0x6201,
    0x2245,
    0x8157,
    0x4113,
    0x1326,
    0x8267,
    0x1146,
    0x2245,
    0x8157,
    0x4113,
    0x5102,
    0x3304,
    0x1326,
    0x8267,
    0x1146,
    0x4223,
    0x8267,
    0x1146,
    0x5102,
    0x2315,
    0x2245,
    0x8157,
    0x3304,
    0x6201,
    0x4223,
    0x8267,
    0x1146,
    0x2315,
    0x2245,
    0x8157,
    0x4223,
    0x8267,
    0x1146,
    0x5102,
    0x6201,
    0x2245,
    0x8157,
    0x4113,
    0x3304,
    0x2245,
    0x8157,
    0x4113,
    0x4223,
    0x8267,
    0x1146,
    0x4223,
    0x4113,
    0x8337,
    0x2315,
    0x2245,
    0x8157,
    0x1326,
    0x8267,
    0x1146,
    0x6201,
    0x5102,
    0x3304,
    0x4223,
    0x4113,
    0x8337,
    0x2315,
    0x2245,
    0x8157,
    0x1326,
    0x8267,
    0x1146,
    0x8337,
    0x4223,
    0x6201,
    0x2245,
    0x8157,
    0x1326,
    0x8267,
    0x1146,
    0x4223,
    0x5102,
    0x3304,
    0x2245,
    0x8157,
    0x8337,
    0x1326,
    0x8267,
    0x1146,
    0x8267,
    0x1146,
    0x5102,
    0x4113,
    0x8337,
    0x2315,
    0x2245,
    0x8157,
    0x6201,
    0x4113,
    0x8337,
    0x8267,
    0x1146,
    0x3304,
    0x2315,
    0x2245,
    0x8157,
    0x8337,
    0x8267,
    0x1146,
    0x5102,
    0x6201,
    0x2245,
    0x8157,
    0x3304,
    0x2245,
    0x8157,
    0x8337,
    0x8267,
    0x1146,
    0x8157,
    0x2315,
    0x3304,
    0x1326,
    0x8267,
    0x8267,
    0x8157,
    0x2315,
    0x6201,
    0x5102,
    0x1326,
    0x8267,
    0x1326,
    0x3304,
    0x6201,
    0x4113,
    0x8157,
    0x8267,
    0x8157,
    0x4113,
    0x5102,
    0x1326,
    0x5102,
    0x4223,
    0x8267,
    0x8157,
    0x2315,
    0x3304,
    0x2315,
    0x6201,
    0x4223,
    0x8267,
    0x8157,
    0x3304,
    0x5102,
    0x4223,
    0x8267,
    0x8157,
    0x4113,
    0x6201,
    0x4113,
    0x4223,
    0x8267,
    0x8157,
    0x8157,
    0x2315,
    0x3304,
    0x1326,
    0x8267,
    0x4223,
    0x4113,
    0x8337,
    0x8157,
    0x2315,
    0x6201,
    0x5102,
    0x1326,
    0x8267,
    0x4223,
    0x4113,
    0x8337,
    0x8157,
    0x8337,
    0x4223,
    0x6201,
    0x3304,
    0x1326,
    0x8267,
    0x5102,
    0x1326,
    0x8267,
    0x8157,
    0x8337,
    0x4223,
    0x8267,
    0x8157,
    0x2315,
    0x3304,
    0x5102,
    0x4113,
    0x8337,
    0x6201,
    0x4113,
    0x8337,
    0x8267,
    0x8157,
    0x2315,
    0x6201,
    0x3304,
    0x5102,
    0x8337,
    0x8267,
    0x8157,
    0x8337,
    0x8267,
    0x8157,
    0x8337,
    0x8157,
    0x8267,
    0x6201,
    0x5102,
    0x3304,
    0x8337,
    0x8157,
    0x8267,
    0x6201,
    0x2315,
    0x4113,
    0x8337,
    0x8157,
    0x8267,
    0x5102,
    0x3304,
    0x2315,
    0x4113,
    0x8337,
    0x8157,
    0x8267,
    0x5102,
    0x4223,
    0x1326,
    0x8337,
    0x8157,
    0x8267,
    0x6201,
    0x4223,
    0x1326,
    0x3304,
    0x8337,
    0x8157,
    0x8267,
    0x6201,
    0x2315,
    0x4113,
    0x5102,
    0x4223,
    0x1326,
    0x8337,
    0x8157,
    0x8267,
    0x4223,
    0x1326,
    0x3304,
    0x2315,
    0x4113,
    0x8337,
    0x8157,
    0x8267,
    0x4113,
    0x8157,
    0x8267,
    0x4223,
    0x4223,
    0x4113,
    0x8157,
    0x8267,
    0x6201,
    0x5102,
    0x3304,
    0x8157,
    0x8267,
    0x4223,
    0x6201,
    0x2315,
    0x3304,
    0x2315,
    0x8157,
    0x8267,
    0x4223,
    0x5102,
    0x1326,
    0x5102,
    0x4113,
    0x8157,
    0x8267,
    0x8157,
    0x4113,
    0x6201,
    0x3304,
    0x1326,
    0x8267,
    0x1326,
    0x5102,
    0x6201,
    0x2315,
    0x8157,
    0x8267,
    0x8267,
    0x1326,
    0x3304,
    0x2315,
    0x8157,
    0x3304,
    0x1146,
    0x2245,
    0x8337,
    0x8157,
    0x8267,
    0x6201,
    0x5102,
    0x1146,
    0x2245,
    0x8337,
    0x8157,
    0x8267,
    0x6201,
    0x2315,
    0x4113,
    0x3304,
    0x1146,
    0x2245,
    0x8337,
    0x8157,
    0x8267,
    0x2315,
    0x4113,
    0x5102,
    0x1146,
    0x2245,
    0x8337,
    0x8157,
    0x8267,
    0x5102,
    0x4223,
    0x1326,
    0x3304,
    0x1146,
    0x2245,
    0x8337,
    0x8157,
    0x8267,
    0x1146,
    0x2245,
    0x6201,
    0x4223,
    0x1326,
    0x8337,
    0x8157,
    0x8267,
    0x6201,
    0x2315,
    0x4113,
    0x5102,
    0x4223,
    0x1326,
    0x3304,
    0x1146,
    0x2245,
    0x8337,
    0x8157,
    0x8267,
    0x4113,
    0x4223,
    0x1326,
    0x1146,
    0x2245,
    0x2315,
    0x8337,
    0x8157,
    0x8267,
    0x4223,
    0x4113,
    0x8157,
    0x8267,
    0x3304,
    0x1146,
    0x2245,
    0x6201,
    0x5102,
    0x1146,
    0x2245,
    0x4223,
    0x4113,
    0x8157,
    0x8267,
    0x8157,
    0x8267,
    0x4223,
    0x6201,
    0x2315,
    0x3304,
    0x1146,
    0x2245,
    0x2315,
    0x8157,
    0x8267,
    0x4223,
    0x5102,
    0x1146,
    0x2245,
    0x1326,
    0x5102,
    0x4113,
    0x8157,
    0x8267,
    0x3304,
    0x1146,
    0x2245,
    0x1326,
    0x1146,
    0x2245,
    0x6201,
    0x4113,
    0x8157,
    0x8267,
    0x5102,
    0x6201,
    0x2315,
    0x8157,
    0x8267,
    0x1326,
    0x3304,
    0x1146,
    0x2245,
    0x1326,
    0x1146,
    0x2245,
    0x2315,
    0x8157,
    0x8267,
    0x2315,
    0x2245,
    0x8267,
    0x8337,
    0x2315,
    0x2245,
    0x8267,
    0x8337,
    0x6201,
    0x5102,
    0x3304,
    0x4113,
    0x6201,
    0x2245,
    0x8267,
    0x8337,
    0x5102,
    0x4113,
    0x8337,
    0x8267,
    0x2245,
    0x3304,
    0x2315,
    0x2245,
    0x8267,
    0x8337,
    0x5102,
    0x4223,
    0x1326,
    0x6201,
    0x4223,
    0x1326,
    0x3304,
    0x8337,
    0x2315,
    0x2245,
    0x8267,
    0x4113,
    0x6201,
    0x2245,
    0x8267,
    0x8337,
    0x5102,
    0x4223,
    0x1326,
    0x4113,
    0x4223,
    0x1326,
    0x3304,
    0x2245,
    0x8267,
    0x8337,
    0x2315,
    0x2245,
    0x8267,
    0x4223,
    0x4113,
    0x2315,
    0x2245,
    0x8267,
    0x4223,
    0x4113,
    0x6201,
    0x5102,
    0x3304,
    0x6201,
    0x2245,
    0x8267,
    0x4223,
    0x3304,
    0x2245,
    0x8267,
    0x4223,
    0x5102,
    0x5102,
    0x4113,
    0x2315,
    0x2245,
    0x8267,
    0x1326,
    0x4113,
    0x2315,
    0x2245,
    0x8267,
    0x1326,
    0x3304,
    0x6201,
    0x5102,
    0x6201,
    0x2245,
    0x8267,
    0x1326,
    0x3304,
    0x2245,
    0x8267,
    0x1326,
    0x8267,
    0x8337,
    0x2315,
    0x3304,
    0x1146,
    0x5102,
    0x1146,
    0x8267,
    0x8337,
    0x2315,
    0x6201,
    0x3304,
    0x1146,
    0x8267,
    0x8337,
    0x4113,
    0x6201,
    0x8337,
    0x4113,
    0x5102,
    0x1146,
    0x8267,
    0x8267,
    0x8337,
    0x2315,
    0x3304,
    0x1146,
    0x5102,
    0x4223,
    0x1326,
    0x1146,
    0x8267,
    0x8337,
    0x2315,
    0x6201,
    0x4223,
    0x1326,
    0x8267,
    0x8337,
    0x4113,
    0x6201,
    0x3304,
    0x1146,
    0x5102,
    0x4223,
    0x1326,
    0x4113,
    0x4223,
    0x1326,
    0x1146,
    0x8267,
    0x8337,
    0x3304,
    0x2315,
    0x4113,
    0x4223,
    0x8267,
    0x1146,
    0x2315,
    0x6201,
    0x5102,
    0x1146,
    0x8267,
    0x4223,
    0x4113,
    0x1146,
    0x8267,
    0x4223,
    0x6201,
    0x3304,
    0x5102,
    0x1146,
    0x8267,
    0x4223,
    0x8267,
    0x1326,
    0x5102,
    0x4113,
    0x2315,
    0x3304,
    0x1146,
    0x6201,
    0x4113,
    0x2315,
    0x1326,
    0x1146,
    0x8267,
    0x6201,
    0x3304,
    0x1146,
    0x8267,
    0x1326,
    0x5102,
    0x1326,
    0x1146,
    0x8267,
    0x1326,
    0x8337,
    0x8157,
    0x1146,
    0x8337,
    0x8157,
    0x1146,
    0x1326,
    0x6201,
    0x5102,
    0x3304,
    0x8337,
    0x8157,
    0x1146,
    0x1326,
    0x6201,
    0x2315,
    0x4113,
    0x4113,
    0x5102,
    0x3304,
    0x2315,
    0x1326,
    0x8337,
    0x8157,
    0x1146,
    0x8337,
    0x8157,
    0x1146,
    0x5102,
    0x4223,
    0x6201,
    0x4223,
    0x8337,
    0x8157,
    0x1146,
    0x3304,
    0x8337,
    0x8157,
    0x1146,
    0x5102,
    0x4223,
    0x6201,
    0x2315,
    0x4113,
    0x4223,
    0x8337,
    0x8157,
    0x1146,
    0x3304,
    0x2315,
    0x4113,
    0x4223,
    0x4113,
    0x8157,
    0x1146,
    0x1326,
    0x4223,
    0x4113,
    0x8157,
    0x1146,
    0x1326,
    0x6201,
    0x5102,
    0x3304,
    0x1146,
    0x8157,
    0x2315,
    0x6201,
    0x4223,
    0x1326,
    0x4223,
    0x5102,
    0x3304,
    0x2315,
    0x8157,
    0x1146,
    0x1326,
    0x4113,
    0x8157,
    0x1146,
    0x5102,
    0x6201,
    0x4113,
    0x8157,
    0x1146,
    0x3304,
    0x2315,
    0x8157,
    0x1146,
    0x5102,
    0x6201,
    0x2315,
    0x8157,
    0x1146,
    0x3304,
    0x2245,
    0x3304,
    0x1326,
    0x8337,
    0x8157,
    0x6201,
    0x2245,
    0x8157,
    0x8337,
    0x1326,
    0x5102,
    0x2245,
    0x3304,
    0x1326,
    0x8337,
    0x8157,
    0x6201,
    0x2315,
    0x4113,
    0x2245,
    0x2315,
    0x4113,
    0x5102,
    0x1326,
    0x8337,
    0x8157,
    0x4223,
    0x8337,
    0x8157,
    0x2245,
    0x3304,
    0x5102,
    0x8157,
    0x2245,
    0x6201,
    0x4223,
    0x8337,
    0x2245,
    0x3304,
    0x5102,
    0x4223,
    0x8337,
    0x8157,
    0x4113,
    0x6201,
    0x2315,
    0x4223,
    0x8337,
    0x8157,
    0x2245,
    0x2315,
    0x4113,
    0x4113,
    0x8157,
    0x2245,
    0x3304,
    0x1326,
    0x4223,
    0x1326,
    0x4223,
    0x4113,
    0x8157,
    0x2245,
    0x6201,
    0x5102,
    0x8157,
    0x2245,
    0x3304,
    0x1326,
    0x4223,
    0x6201,
    0x2315,
    0x5102,
    0x1326,
    0x4223,
    0x2315,
    0x8157,
    0x2245,
    0x3304,
    0x5102,
    0x4113,
    0x8157,
    0x2245,
    0x4113,
    0x8157,
    0x2245,
    0x6201,
    0x5102,
    0x6201,
    0x2315,
    0x8157,
    0x2245,
    0x3304,
    0x2315,
    0x8157,
    0x2245,
    0x1146,
    0x1326,
    0x8337,
    0x2315,
    0x2245,
    0x1146,
    0x1326,
    0x8337,
    0x2315,
    0x2245,
    0x6201,
    0x5102,
    0x3304,
    0x6201,
    0x2245,
    0x1146,
    0x1326,
    0x8337,
    0x4113,
    0x2245,
    0x1146,
    0x1326,
    0x8337,
    0x4113,
    0x5102,
    0x3304,
    0x5102,
    0x1146,
    0x2245,
    0x2315,
    0x8337,
    0x4223,
    0x1146,
    0x3304,
    0x6201,
    0x4223,
    0x8337,
    0x2315,
    0x2245,
    0x8337,
    0x4113,
    0x6201,
    0x2245,
    0x1146,
    0x5102,
    0x4223,
    0x4223,
    0x8337,
    0x4113,
    0x3304,
    0x2245,
    0x1146,
    0x4113,
    0x2315,
    0x2245,
    0x1146,
    0x1326,
    0x4223,
    0x1146,
    0x1326,
    0x4223,
    0x4113,
    0x2315,
    0x2245,
    0x6201,
    0x5102,
    0x3304,
    0x1326,
    0x4223,
    0x6201,
    0x2245,
    0x1146,
    0x4223,
    0x5102,
    0x3304,
    0x2245,
    0x1146,
    0x1326,
    0x2245,
    0x1146,
    0x5102,
    0x4113,
    0x2315,
    0x4113,
    0x2315,
    0x2245,
    0x1146,
    0x3304,
    0x6201,
    0x6201,
    0x2245,
    0x1146,
    0x5102,
    0x3304,
    0x2245,
    0x1146,
    0x3304,
    0x1326,
    0x8337,
    0x2315,
    0x5102,
    0x1326,
    0x8337,
    0x2315,
    0x6201,
    0x6201,
    0x3304,
    0x1326,
    0x8337,
    0x4113,
    0x5102,
    0x1326,
    0x8337,
    0x4113,
    0x4223,
    0x8337,
    0x2315,
    0x3304,
    0x5102,
    0x6201,
    0x4223,
    0x8337,
    0x2315,
    0x3304,
    0x5102,
    0x4223,
    0x8337,
    0x4113,
    0x6201,
    0x4113,
    0x4223,
    0x8337,
    0x4113,
    0x2315,
    0x3304,
    0x1326,
    0x4223,
    0x1326,
    0x4223,
    0x4113,
    0x2315,
    0x6201,
    0x5102,
    0x3304,
    0x1326,
    0x4223,
    0x6201,
    0x5102,
    0x1326,
    0x4223,
    0x5102,
    0x4113,
    0x2315,
    0x3304,
    0x6201,
    0x4113,
    0x2315,
    0x6201,
    0x3304,
    0x5102
};
static const uint vertexLookupTable[256] = {
    0,
    0,
    3,
    6,
    10,
    13,
    17,
    23,
    28,
    31,
    37,
    41,
    46,
    50,
    55,
    60,
    64,
    67,
    71,
    77,
    82,
    88,
    93,
    102,
    108,
    114,
    121,
    128,
    134,
    141,
    147,
    155,
    160,
    163,
    169,
    173,
    178,
    184,
    191,
    198,
    204,
    210,
    219,
    224,
    230,
    237,
    245,
    251,
    256,
    260,
    265,
    270,
    274,
    281,
    287,
    295,
    300,
    307,
    315,
    321,
    326,
    334,
    341,
    348,
    352,
    355,
    361,
    367,
    374,
    378,
    383,
    390,
    396,
    402,
    411,
    418,
    426,
    431,
    437,
    443,
    448,
    452,
    457,
    464,
    470,
    475,
    479,
    487,
    492,
    499,
    507,
    515,
    522,
    528,
    533,
    540,
    544,
    550,
    559,
    566,
    574,
    581,
    589,
    597,
    604,
    613,
    625,
    633,
    642,
    650,
    659,
    666,
    672,
    677,
    683,
    689,
    694,
    700,
    705,
    712,
    716,
    724,
    733,
    740,
    746,
    753,
    759,
    765,
    768,
    771,
    777,
    783,
    790,
    796,
    803,
    812,
    820,
    824,
    831,
    836,
    842,
    847,
    853,
    859,
    864,
    870,
    877,
    886,
    894,
    903,
    911,
    923,
    932,
    939,
    947,
    955,
    962,
    970,
    977,
    986,
    992,
    996,
    1003,
    1008,
    1014,
    1021,
    1029,
    1037,
    1044,
    1049,
    1057,
    1061,
    1066,
    1072,
    1079,
    1084,
    1088,
    1093,
    1099,
    1105,
    1110,
    1118,
    1125,
    1134,
    1140,
    1146,
    1153,
    1158,
    1162,
    1169,
    1175,
    1181,
    1184,
    1188,
    1195,
    1202,
    1210,
    1215,
    1221,
    1229,
    1236,
    1241,
    1249,
    1255,
    1262,
    1266,
    1271,
    1276,
    1280,
    1285,
    1291,
    1299,
    1306,
    1312,
    1317,
    1326,
    1332,
    1338,
    1345,
    1352,
    1358,
    1363,
    1367,
    1373,
    1376,
    1381,
    1389,
    1395,
    1402,
    1408,
    1415,
    1422,
    1428,
    1434,
    1443,
    1448,
    1454,
    1459,
    1465,
    1469,
    1472,
    1476,
    1481,
    1486,
    1490,
    1495,
    1499,
    1505,
    1508,
    1513,
    1519,
    1523,
    1526,
    1530,
    1533,
    1536
};
static const min16uint cellData[256] =  {
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0x31, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0x62, 0, 1, 2, 3, 4, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0x42, 0, 1, 2, 0, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0x53, 0, 1, 4, 1, 3, 4, 1, 2, 3, 0, 0, 0, 0, 0, 0,
    0x73, 0, 1, 2, 0, 2, 3, 4, 5, 6, 0, 0, 0, 0, 0, 0,
    0x93, 0, 1, 2, 3, 4, 5, 6, 7, 8, 0, 0, 0, 0, 0, 0,
    0x84, 0, 1, 4, 1, 3, 4, 1, 2, 3, 5, 6, 7, 0, 0, 0,
    0x84, 0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, 0, 0, 0,
    0xC4, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 0, 0,
    0x64, 0, 4, 5, 0, 1, 4, 1, 3, 4, 1, 2, 3, 0, 0, 0,
    0x64, 0, 5, 4, 0, 4, 1, 1, 4, 3, 1, 3, 2, 0, 0, 0,
    0x64, 0, 4, 5, 0, 3, 4, 0, 1, 3, 1, 2, 3, 0, 0, 0,
    0x64, 0, 1, 2, 0, 2, 3, 0, 3, 4, 0, 4, 5, 0, 0, 0,
    0x75, 0, 1, 2, 0, 2, 3, 0, 3, 4, 0, 4, 5, 0, 5, 6,
    0x95, 0, 4, 5, 0, 3, 4, 0, 1, 3, 1, 2, 3, 6, 7, 8,
};
static const min12int cellClassData[256] = {
    0x00, 0x01, 0x01, 0x03, 0x01, 0x03, 0x02, 0x04, 0x01, 0x02, 0x03, 0x04, 0x03, 0x04, 0x04, 0x03,
    0x01, 0x03, 0x02, 0x04, 0x02, 0x04, 0x06, 0x0C, 0x02, 0x05, 0x05, 0x0B, 0x05, 0x0A, 0x07, 0x04,
    0x01, 0x02, 0x03, 0x04, 0x02, 0x05, 0x05, 0x0A, 0x02, 0x06, 0x04, 0x0C, 0x05, 0x07, 0x0B, 0x04,
    0x03, 0x04, 0x04, 0x03, 0x05, 0x0B, 0x07, 0x04, 0x05, 0x07, 0x0A, 0x04, 0x08, 0x0E, 0x0E, 0x03,
    0x01, 0x02, 0x02, 0x05, 0x03, 0x04, 0x05, 0x0B, 0x02, 0x06, 0x05, 0x07, 0x04, 0x0C, 0x0A, 0x04,
    0x03, 0x04, 0x05, 0x0A, 0x04, 0x03, 0x07, 0x04, 0x05, 0x07, 0x08, 0x0E, 0x0B, 0x04, 0x0E, 0x03,
    0x02, 0x06, 0x05, 0x07, 0x05, 0x07, 0x08, 0x0E, 0x06, 0x09, 0x07, 0x0F, 0x07, 0x0F, 0x0E, 0x0D,
    0x04, 0x0C, 0x0B, 0x04, 0x0A, 0x04, 0x0E, 0x03, 0x07, 0x0F, 0x0E, 0x0D, 0x0E, 0x0D, 0x02, 0x01,
    0x01, 0x02, 0x02, 0x05, 0x02, 0x05, 0x06, 0x07, 0x03, 0x05, 0x04, 0x0A, 0x04, 0x0B, 0x0C, 0x04,
    0x02, 0x05, 0x06, 0x07, 0x06, 0x07, 0x09, 0x0F, 0x05, 0x08, 0x07, 0x0E, 0x07, 0x0E, 0x0F, 0x0D,
    0x03, 0x05, 0x04, 0x0B, 0x05, 0x08, 0x07, 0x0E, 0x04, 0x07, 0x03, 0x04, 0x0A, 0x0E, 0x04, 0x03,
    0x04, 0x0A, 0x0C, 0x04, 0x07, 0x0E, 0x0F, 0x0D, 0x0B, 0x0E, 0x04, 0x03, 0x0E, 0x02, 0x0D, 0x01,
    0x03, 0x05, 0x05, 0x08, 0x04, 0x0A, 0x07, 0x0E, 0x04, 0x07, 0x0B, 0x0E, 0x03, 0x04, 0x04, 0x03,
    0x04, 0x0B, 0x07, 0x0E, 0x0C, 0x04, 0x0F, 0x0D, 0x0A, 0x0E, 0x0E, 0x02, 0x04, 0x03, 0x0D, 0x01,
    0x04, 0x07, 0x0A, 0x0E, 0x0B, 0x0E, 0x0E, 0x02, 0x0C, 0x0F, 0x04, 0x0D, 0x04, 0x0D, 0x03, 0x01,
    0x03, 0x04, 0x04, 0x03, 0x04, 0x03, 0x0D, 0x01, 0x04, 0x0D, 0x03, 0x01, 0x03, 0x01, 0x01, 0x00
};

//Chunk Data to process. All Chunk blocks are prefixed with an int2 denoting the chunk location.
ByteAddressBuffer ChunkData;
//How large a cell in a chunk is.
float CellScale = 1;
//Iso Value for finding vertices.
float IsoValue = 0.5;
//Output buffer for vertices
RWStructuredBuffer<float3> Vertices;
//Output buffer for normals
RWStructuredBuffer<float3> Normals;
//Output buffer for indices.
RWStructuredBuffer<uint> Indices;
//Output buffer for executing shader.
RWStructuredBuffer<uint> DrawArguments;
//Output buffer for holding vertex counts
RWStructuredBuffer<uint> ChunkArguments;

uint GetCube(uint3 cell,uint chunk) {
    uint byteOffset = (cell.y)*(PADDED_CHUNK_LAYER) +
                        (cell.z)*(PADDED_CHUNK_HORIZONTAL_SPAN) +
                        (cell.x);
    uint blockOffset = (byteOffset/4);
    uint bitOffset = (byteOffset % 4);
    return (ChunkData.Load((blockOffset*4)+(chunk*PADDED_CHUNK_DATA_SIZE)+CHUNKDATA_OFFSET) & (0xFF << (bitOffset*8))) >> (bitOffset*8);
}
float3 GetNormal(uint3 cell,uint chunk, int vertex) {
    uint b = 1 << vertex;

    uint2x3 cells = {
        { (GetCube(uint3(cell.x-1,cell.y,cell.z),chunk) & b) != 0,(GetCube(uint3(cell.x,cell.y-1,cell.z),chunk) & b) != 0,(GetCube(uint3(cell.x,cell.y,cell.z-1),chunk) & b) != 0 },
        { (GetCube(uint3(cell.x+1,cell.y,cell.z),chunk) & b) != 0,(GetCube(uint3(cell.x,cell.y+1,cell.z),chunk) & b) != 0,(GetCube(uint3(cell.x,cell.y,cell.z+1),chunk) & b) != 0 },
    };
    return ((int3)cells[0]-(int3)cells[1])*0.5;
}

[numthreads(CHUNK_HORIZONTAL_SPAN,CHUNK_VERTICAL_SPAN,CHUNK_HORIZONTAL_SPAN)]
void MarchingCubes(uint3 groupThreadId : SV_GroupThreadID,uint3 groupId : SV_GroupID) {
    uint chunkOffset = groupId.x*PADDED_CHUNK_DATA_SIZE;
    uint3 cell = groupThreadId;
    uint byteOffset = (cell.y+1)*(PADDED_CHUNK_LAYER) +
                        (cell.z+1)*(PADDED_CHUNK_HORIZONTAL_SPAN) +
                        (cell.x+1);
    uint blockOffset = (byteOffset/4);
    uint bitOffset = (byteOffset % 4);
    int2 chunk = ChunkData.Load2(chunkOffset);
    uint cube = (ChunkData.Load((blockOffset*4)+chunkOffset+CHUNKDATA_OFFSET) & (0xFF << (bitOffset*8))) >> (bitOffset*8);
    if (cube == 0 || cube == 255) {
        return;
    }
    uint cubeCellClassIndex = cellClassData[cube];
    uint totalVertices = (uint)((cellData[cubeCellClassIndex*16] & 0xF0) >> 4);
    uint totalTriangles = (uint)(cellData[cubeCellClassIndex*16] & 0x0F);
    min16uint edgeInfo;
    uint vertexOffset = 0;
    uint indexOffset = 0;
    InterlockedAdd(ChunkArguments[0],totalVertices,vertexOffset);
    InterlockedAdd(DrawArguments[0],totalTriangles*3,indexOffset);
    
    for (uint i=0;i < totalVertices;i++) {
        edgeInfo = vertexData[vertexLookupTable[cube]+i];
        int vertexHighIndex = edgeInfo & 0x0F;
        int vertexLowIndex = (edgeInfo & 0xF0) >> 4;
        Vertices[vertexOffset+i] = (cell + lerp(vertexOrder[vertexLowIndex],vertexOrder[vertexHighIndex],IsoValue)  + float3(chunk.x*CHUNK_HORIZONTAL_SPAN,0,chunk.y*CHUNK_HORIZONTAL_SPAN))*CellScale;
        Normals[vertexOffset+i] = lerp(GetNormal(cell+1,groupId.x,vertexLowIndex),GetNormal(cell+1,groupId.x,vertexHighIndex),IsoValue);
    }
    
    for (uint j = 0;j < totalTriangles;j++) {
        int offset = (((uint)cubeCellClassIndex)*16)+1+(j*3);
        Indices[indexOffset+(j*3)] = vertexOffset + (uint)(cellData[offset + triangleWindingOrder[0]]);
        Indices[indexOffset+(j*3)+1] = vertexOffset + (uint)(cellData[offset + triangleWindingOrder[1]]);
        Indices[indexOffset+(j*3)+2] = vertexOffset + (uint)(cellData[offset + triangleWindingOrder[2]]);
    }
}